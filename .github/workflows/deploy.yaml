name: Fedora Sericea Bootc DevSec CI 

on:
  push:
    branches: [main]
  pull_request:
  workflow_dispatch:

permissions:
  contents: read
  packages: write
  id-token: write
  pull-requests: write
  security-events: write

concurrency:
  group: devsec-${{ github.ref }}
  cancel-in-progress: true

env:
  REGISTRY: ghcr.io
  IMAGE_BASE: ghcr.io/${{ github.repository_owner }}/exousia

jobs:
  build-scan-push:
    runs-on: ubuntu-latest
    timeout-minutes: 30

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Generate image tags
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.IMAGE_BASE }}

      # --- Build ---
      - name: Build image with Buildah
        id: build-image
        uses: redhat-actions/buildah-build@v2
        with:
          image: ${{ env.IMAGE_BASE }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          containerfiles: |
            ./Containerfile
          # Pass the actor as a build-arg and your PAT as the secret
          build-args: |
            GH_USER=${{ github.actor }}
          secrets: |
            gh_token=${{ secrets.GHCR_PAT }}
          # Scan BEFORE Push
          push: 'false'

      # --- SAST / Linting ---
      - name: Lint Containerfile
        uses: hadolint/hadolint-action@v3.1.0
        with:
          dockerfile: Containerfile
          ignore: DL3041,DL3059,SC2086,DL4006,SC3037 

      - name: Setup Bats
        uses: bats-core/bats-action@3.0.0

      - name: Run Bats Tests
        run: buildah unshare -- bats -r tests
        continue-on-error: true

      - name: Run ShellCheck
        uses: ludeeus/action-shellcheck@master

      # --- Vulnerability Scanning ---
      - name: Cache Trivy DB
        uses: actions/cache@v4
        with:
          path: ~/.cache/trivy
          key: trivy-db-${{ runner.os }}-v2

      - name: Save image for Trivy scan
        run: |
          podman save -o image.tar ${{ env.IMAGE_BASE }}:${{ github.sha }}

      - name: Install Trivy
        run: |
          curl -sSfL https://github.com/aquasecurity/trivy/releases/download/v0.52.2/trivy_0.52.2_Linux-64bit.tar.gz \
            | tar -xz -C /usr/local/bin trivy

      - name: Trivy scan (non-blocking)
        continue-on-error: true
        run: |
          trivy image --input image.tar \
            --scanners vuln \
            --severity CRITICAL,HIGH \
            --exit-code 1 \
            --format table || echo "::warning::Trivy found CRITICAL or HIGH vulnerabilities"

      - name: Semgrep static analysis
        uses: returntocorp/semgrep-action@v1
        with:
          config: auto

      # --- Push to GHCR ---
      - name: Login to GitHub Container Registry
        if: github.event_name != 'pull_request' && github.ref == 'refs/heads/main'
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GHCR_PAT }}

      - name: Push image to registry
        if: github.event_name != 'pull_request' && github.ref == 'refs/heads/main'
        id: push-to-registry
        uses: redhat-actions/push-to-registry@v2
        with:
          image: ${{ env.IMAGE_BASE }}
          tags: ${{ steps.meta.outputs.tags }}
